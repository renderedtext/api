#%RAML 1.0
title: Semaphore
baseUri: https://api.semaphoreci.com/v2
mediaType: application/json

types:
  UUID:
    type: string
    pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$

  time:
    type: datetime
    format: rfc3339

  Error:
    type: object
    properties:
      message: string

  Org:
    type: object
    properties:
      id:
        type: UUID
        description: "Unique ID of the organization."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      name:
        type: string
        description: "Name of the organization."
        example: "Rendered Text"
      url:
        type: string
        description: "Show URL for the organization."
        example: "https://api.semaphoreci.com/v2/orgs/renderedtext"
      projects_url:
        type: string
        description: "Projects URL for the organization"
        example: "https://api.semaphoreci.com/v2/orgs/renderedtext/projects"
      shared_configs_url:
        type: string
        description: "Shared Configurations URL for the organization"
        example: "https://api.semaphoreci.com/v2/orgs/renderedtext/shared_configs"
      users_url:
        type: string
        description: "Users URL for the organization"
        example: "https://api.semaphoreci.com/v2/orgs/renderedtext/users"
      teams_url:
        type: string
        description: "Teams URL for the organization"
        example: "https://api.semaphoreci.com/v2/orgs/renderedtext/teams"
      username:
        type: string
        description: "Unique username of the organization."
        example: "renderedtext"
      created_at: time
      updated_at: time

  TeamPatch:
    type: object
    properties:
      name?:
        type: string
        description: "Name of the team. The name must be unique in the organization."
        example: "developers"
      permission?:
        description: "The permission level for team members in the organization."
        enum: [read, edit, admin, owner]
        example: "edit"
      description?:
        type: string
        description: "Description for the team."
        example: "Developers team"

  TeamPost:
    type: object
    properties:
      name:
        type: string
        description: "Name of the team. The name must be unique in the organization."
        example: "developers"
      permission:
        enum: [read, edit, admin, owner]
        description: "The permission level for team members in the organization."
        example: "edit"
      description?:
        type: string
        description: "Description for the team."
        example: "Developers team"

  Team:
    type: TeamPost
    properties:
      id:
        type: UUID
        description: "Unique ID of the team."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        description: "Show URL for the team."
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      users_url:
        type: string
        description: "Users URL for the team"
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/users"
      projects_url:
        type: string
        description: "Projects URL for the team"
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/projects"
      shared_configs_url:
        type: string
        description: "Shared Configurations URL for the team"
        example: "https://api.semaphoreci.com/v2/teams/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/shared_configs"
      updated_at: time
      created_at: time

  ProjectPost:
    type: object
    properties:
      name:
        type: string
        description: "Name of the project on Semaphore"
        example: "cli"
      repo_name:
        type: string
        description: "Name of the repository on GitHub or BitBucket"
        example: "cli"
      repo_owner:
        type: string
        description: "Name of the repository owner on GitHub or BitBucket"
        example: "renderedtext"
      repo_provider:
        enum: [github, bitbucket]
        description: "Repository Host"
        example: "github"

  Project:
    type: object
    properties:
      id:
        type: UUID
        description: "Unique ID of the project."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      name:
        type: string
        description: "Name of the project."
        example: "elixir-lang"
      users_url:
        type: string
        description: "Users URL for the project"
        example: "https://api.semaphoreci.com/v2/projects/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/users"
      shared_configs_url:
        type: string
        description: "Shared Configurations URL for the project"
        example: "https://api.semaphoreci.com/v2/projects/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/shared_configs"
      env_vars_url:
        type: string
        description: "Environment Variables URL for the project"
        example: "https://api.semaphoreci.com/v2/projects/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/env_vars"
      config_files_url:
        type: string
        description: "Config Files URL for the project"
        example: "https://api.semaphoreci.com/v2/projects/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/config_files"
      updated_at: time
      created_at: time

  SharedConfigPatch:
    type: object
    properties:
      name?:
        type: string
        description: "Name of the shared configuration."
        example: "AWS Tokens"
      description?:
        type: string
        description: "Description for the shared configuration."
        example: "AWS tokens for deployment"

  SharedConfigPost:
    type: object
    properties:
      name:
        type: string
        description: "Name of the shared configuration."
        example: "AWS Tokens"
      description?:
        type: string
        description: "Description for the shared configuration."
        example: "AWS tokens for deployment"

  SharedConfig:
    type: SharedConfigPost
    properties:
      id:
        type: UUID
        description: "Unique ID of the shared configuration."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      url:
        type: string
        description: "Show URL for the shared configuration."
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      projects_url:
        type: string
        description: "Porjects URL for the shared configuration"
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/projects"
      teams_url:
        type: string
        description: "Teams URL for the shared configuration"
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/teams"
      env_vars_url:
        type: string
        description: "Environment Variables URL for the shared configuration"
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/env_vars"
      config_files_url:
        type: string
        description: "Config Files URL for the the shared configuration"
        example: "https://api.semaphoreci.com/v2/shared_configs/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5/config_files"
      created_at: time
      updated_at: time

  EnvVarPatch:
    type: object
    properties:
      name?:
        type: string
        description: "Name of the environment variable."
        example: "API_TOKEN"
      content?:
        type: string
        description: "Content of the environment variable."
        example: "8CgLAxXn"

  EnvVarPost:
    type: object
    properties:
      name:
        type: string
        description: "Name of the environment variable."
        example: "API_TOKEN"
      content:
        type: string
        description: "Content of the environment variable."
        example: "8CgLAxXn"
      encrypted:
        type: boolean
        example: false

  EnvVar:
    type: object
    properties:
      id:
        type: UUID
        description: "Unique ID of the environment variable."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      name:
        type: string
        description: "Name of the environment variable."
        example: "API_TOKEN"
      url:
        type: string
        description: "Show URL for the environment variable."
        example: "https://api.semaphoreci.com/v2/env_vars/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      content:
        type: string
        description: "Content of the environment variable. Will be `null` if encrypted."
        example: "8CgLAxXn"
      shared:
        type: boolean
        description: "True if the environment variable belongs to a shared configuration."
        example: true
      encrypted:
        type: boolean
        description: "True if the environment variable is encrypted."
        example: false
      created_at: time
      updated_at: time

  ConfigFilePatch:
    type: object
    properties:
      path?:
        type: string
        description: "Path of the configuration file."
        example: ".credentials"
      content?:
        type: string
        description: "Content of the configuration file."
        example: "password: ec2c9f6f64b5"

  ConfigFilePost:
    type: object
    properties:
      path:
        type: string
        description: "Path of the configuration file."
        example: ".credentials"
      content:
        type: string
        description: "Content of the configuration file. Will be `null` if the file is encrypted."
        example: "password: ec2c9f6f64b5"
      encrypted:
        type: boolean
        description: "True if the file is encrypted."
        example: false

  ConfigFile:
    type: object
    properties:
      id:
        type: UUID
        description: "Unique ID of the configuration file."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      path:
        type: string
        description: "Path of the configuration file."
        example: ".credentials"
      url:
        type: string
        description: "Show URL for the configuration file."
        example: "https://api.semaphoreci.com/v2/config_files/86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      content:
        type: string
        description: "Content of the configuration file. Will be `null` if the file is encrypted."
        example: "password: ec2c9f6f64b5"
      shared:
        type: boolean
        description: "True if the configuration file belongs to a shared configuration."
        example: true
      encrypted:
        type: boolean
        description: "True if the file is encrypted."
        example: false
      created_at: time
      updated_at: time

  User:
    type: object
    properties:
      uid:
        type: UUID
        description: "Unique ID of the user."
        example: "86e78b7e-2f9c-45a7-9939-ec2c9f6f64b5"
      username:
        type: string
        description: "Unique username of the user."
        example: "johndoe"
      name:
        type: string
        description: "Name of the user."
        example: "John Doe"
      created_at: time
      updated_at: time

traits:
  withRequestItem:
    body:
      application/json:
        type: <<item>>
  withResponseItem:
    responses:
      200:
        body:
          application/json:
            type: <<item>>
  withResponseItems:
    responses:
      200:
        body:
          application/json:
            type: <<item>>[]
  withCreateResponse:
    responses:
      201:
        body:
          application/json:
            type: <<item>>
  withNoBodyResponse:
    responses:
      204:
  withClientError:
    responses:
      400:
        body:
          application/json:
            type: Error
  withNotFoundError:
    responses:
      404:
        body:
          application/json:
            type: Error
  withPreconditionFailedError:
    responses:
      412:
        body:
          application/json:
            type: Error

/users:
  displayName: "Users"

/orgs:
  displayName: "Organizations"

  get:
    displayName: List your organizations
    is: [withResponseItems: {item : Org}]

  /{username}:
    get:
      displayName: Get an organization
      is: [withResponseItem: {item : Org}, withNotFoundError]

  /{org_username}:
    /teams:
      get:
        displayName: List teams in an organization
        is: [withResponseItems: {item : Team}]
      post:
        displayName: Create a team in an organization
        description: Only organization owners can create new teams.
        is: [withRequestItem: {item : TeamPost},
             withResponseItem: {item : Team},
             withNotFoundError,
             withPreconditionFailedError]
    /projects:
      get:
        displayName: List projects in an organization
        is: [withResponseItems: {item : Project}]
      post:
        displayName: Create a project in an organization
        description: Only organization admin can create new projects.
        is: [withRequestItem: {item : ProjectPost},
             withResponseItem: {item : Project},
             withNotFoundError,
             withPreconditionFailedError]
    /shared_configs:
      get:
        displayName: List shared configurations in an organization
        is: [withResponseItems: {item : SharedConfig}]
      post:
        displayName: Create shared configuration in an organization
        is: [withRequestItem: {item : SharedConfigPost},
            withResponseItem: {item : SharedConfig},
            withNotFoundError,
            withPreconditionFailedError]
    /users:
      get:
        displayName: List all users for a organization
        is: [withResponseItems: {item : User}, withNotFoundError]

/teams:
  displayName: "Teams"

  /{id}:
    get:
      displayName: Get a team
      is: [withResponseItem: {item : Team}, withNotFoundError]
    delete:
      displayName: Delete a team
      description: Only organization owners can delete teams.
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      displayName: Update a team
      description: Only organization owners can update teams.
      is: [withRequestItem: {item : TeamPatch}, withResponseItem: {item : Team}, withNotFoundError]

  /{team_id}:
    /shared_configs:
      get:
        displayName: List shared configurations in a team
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          displayName: Add a shared configuration to a team
          description: The user needs to be a member of the team, and to have admin permissions in the organization.
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          displayName: Remove shared configuration from a team
          description: The user needs to be a member of the team, and to have admin permissions in the organization.
          is: [withNoBodyResponse, withNotFoundError]

    /users:
      get:
        displayName: List members of a team
        is: [withResponseItems: {item : User}, withNotFoundError]
      /{user_username}:
        post:
          displayName: Add user to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          displayName: Remove user from a team
          is: [withNoBodyResponse, withNotFoundError]

    /projects:
      get:
        displayName: List project added to a team
        is: [withResponseItems: {item : Project}, withNotFoundError]

      /{project_id}:
        post:
          displayName: Add project to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          displayName: Remove project from a team
          is: [withNoBodyResponse, withNotFoundError]

/projects:
  displayName: "Projects"

  /{project_id}:
    /shared_configs:
      get:
        displayName: List shared configurations attached to a project
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          displayName: Attach a shared configuration to a project
          is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
        delete:
          displayName: Dettach a shared configuration from a project
          is: [withNoBodyResponse, withNotFoundError]

    /env_vars:
      get:
        displayName: List environment variables connected to a project
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      /{env_var_id}:
        post:
          displayName: Connect a shared environment variable to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          displayName: Disconnect a shared environment variable from a project
          is: [withNoBodyResponse, withNotFoundError]

    /config_files:
      get:
        displayName: List config files connected to a project
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      /{config_file_id}:
        post:
          displayName: Connect a shared config file to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          displayName: Disconnect a shared config file from a project
          is: [withNoBodyResponse, withNotFoundError]

    /teams:
      get:
        displayName: List all teams connected to project
        is: [withResponseItems: {item : Team}, withNotFoundError]

    /users:
      get:
        displayName: List all users for a project
        is: [withResponseItems: {item : User}, withNotFoundError]

/shared_configs:
  displayName: "Shared Configurations"

  /{id}:
    get:
      displayName: Get a shared configuration
      is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
    delete:
      displayName: Delete a shared configuration
      description: Deleting a shared configuration requires at least admin permissions in the organization.
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      displayName: Update a shared configuration
      description: To update the shared configuration you need to be an admin or owner in your organization.
      is: [withRequestItem: {item : SharedConfigPatch},
          withResponseItem: {item : SharedConfig}, withNotFoundError]

  /{shared_config_id}:
    /projects:
      get:
        displayName: List projects for a shared configuration
        is: [withResponseItems: {item : Project}, withNotFoundError]

    /teams:
      get:
        displayName: List teams for a shared configuration
        is: [withResponseItems: {item : Team}, withNotFoundError]

    /env_vars:
      get:
        displayName: List environment variables belonging to a shared configuration
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      post:
        displayName: Create environment variable within a shared configuration
        description: Environment variables can be only created by users who can edit the shared configuration.
        is: [withRequestItem: {item : EnvVarPost},
            withResponseItem: {item : EnvVar}, withNotFoundError]
    /config_files:
      get:
        displayName: List config files belonging to a shared configuration
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      post:
        displayName: Create a config file within a shared configuration
        description: Configuration files can be only created by users who can edit the shared configuration.
        is: [withRequestItem: {item : ConfigFilePost},
            withResponseItem: {item : ConfigFile}, withNotFoundError]

/env_vars:
  displayName: "Environment Variables"

  /{id}:
    get:
      displayName: Get an environment variable
      description: Displays the environment variable. Encrypted configuration files  will have `null` as content.
      is: [withResponseItem: {item : EnvVar}, withNotFoundError]
    delete:
      displayName: Delete an environment variable
      description: Environment variables can be only deleted by users who has edit access on the project or the shared configuration.
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      displayName: Update an environment variable
      description: |
        Environment variables can be only updated by users who has edit access on the project or the shared configuration. Encrypted environment variables can't be edited.
      is: [withRequestItem: {item : EnvVarPatch},
          withResponseItem: {item : EnvVar}, withNotFoundError]

/config_files:
  displayName: "Configuration Files"

  /{id}:
    get:
      displayName: Get a config file
      description: Displays the configuration file. Encrypted configuration files  will have `null` as content.
      is: [withResponseItem: {item : ConfigFile}, withNotFoundError]
    delete:
      displayName: Delete a config file
      description: Configuration files can be only deleted by users who has edit access on the project or the shared configuration.
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      displayName: Update a config file
      description: |
        Configuration files can be only updated by users who has edit access on the project or the shared configuration. Encrypted environment variables can't be edited.
      is: [withRequestItem: {item : ConfigFilePatch},
          withResponseItem: {item : ConfigFile}, withNotFoundError]

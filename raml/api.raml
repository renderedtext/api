#%RAML 1.0
title: Semaphore
version: v2
baseUri: https://api.semaphoreci.com/v2
mediaType: application/json

uses:
  testAnnotation: libraries/tests-annotation.raml

documentation:
- title: Welcome
  content: !include descriptions/welcome.raml

- title: Authentication
  content: !include descriptions/authentication.raml

- title: Requests
  content: !include descriptions/requests.raml

- title: Response
  content: !include descriptions/response.raml

- title: Parameters
  content: !include descriptions/parameters.raml

- title: Pagination
  content: !include descriptions/pagination.raml

- title: Errors
  content: !include descriptions/errors.raml

- title: Constraints
  content: !include descriptions/constraints.raml

types:
  Error:
    type: object
    properties:
      message: string
  User:
    type: object
    properties:
      username: string
      email: string
      realname: string
  Org:
    type: object
    properties:
      id: string
      name: string
      url: string
      username: string
      created_at: rfc3339
      updated_at: rfc3339
  TeamPatch:
    type: object
    properties:
      name?: string
      permission?:
        enum: [read, write, admin]
      description?: string
  TeamPost:
    type: object
    properties:
      name: string
      permission:
        enum: [read, write, admin]
      description?: string
  Team:
    type: object
    properties:
      name: string
      permission:
        enum: [read, write, admin]
      description: string?
      id: integer
      url: string
      updated_at:
        type: datetime
        format: rfc3339
      created_at:
        type: datetime
        format: rfc3339
  ProjectPost:
    type: object
    properties:
      name: string
      description?: string
  ProjectPatch:
    type: object
    properties:
      name?: string
      description?: string
  Project:
    type: ProjectPost
    properties:
      id: integer
  SharedConfigPatch:
    type: object
    properties:
      name?: string
      description?: string
  SharedConfigPost:
    type: object
    properties:
      name: string
      description?: string
  SharedConfig:
    type: SharedConfigPost
    properties:
      id: integer
  EnvVarPatch:
    type: object
    properties:
      key?: string
      value?: string
  EnvVarPost:
    type: object
    properties:
      name: string
      value: string
  EnvVar:
    type: EnvVarPost
    properties:
      id: integer
  ConfigFilePatch:
    type: object
    properties:
      name?: string
      content?: string
  ConfigFilePost:
    type: object
    properties:
      path: string
      content: string
  ConfigFile:
    type: ConfigFilePost
    properties:
      id: integer

traits:
  withRequestItem:
    body:
      application/json:
        type: <<item>>
  withResponseItem:
    responses:
      200:
        body:
          application/json:
            type: <<item>>
  withResponseItems:
    responses:
      200:
        body:
          application/json:
            type: <<item>>[]
  withCreateResponse:
    responses:
      201:
        body:
          application/json:
            type: <<item>>
  withNoBodyResponse:
    responses:
      204:
  withClientError:
    responses:
      400:
        body:
          application/json:
            type: Error
  withNotFoundError:
    responses:
      404:
        body:
          application/json:
            type: Error
  withPreconditionFailedError:
    responses:
      412:
        body:
          application/json:
            type: Error

/orgs:
  get:
    description: List your organizations
    is: [withResponseItems: {item : Org}]
    responses:
      200:
        (testAnnotation.tests):
          - response:
              body:
                - name: id
                  type: integer
                - name: name
                  type: string
                - name: username
                  type: string
                - name: description
                  type: string | nil
  /{username}:
    get:
      description: Get an organization
      is: [withResponseItem: {item : Org}, withNotFoundError]
      responses:
        200:
          (testAnnotation.tests):
          - request:
              urlArgs:
              - name: org_username
                value: <valid_org_username>
            response:
              body:
              - name: id
                type: integer
              - name: name
                type: string
                value: <valid_org_username>
              - name: username
                type: string
              - name: description
                type: string | nil
        404:
          (testAnnotation.tests):
          - request:
              urlArgs:
              - name: org_username
                value: nonexiting_username
            response:
              body:
              - name: message
                type: string

  /{org_username}:
    /teams:
      get:
        description: List teams in an organization
        is: [withResponseItems: {item : Team}]
      post:
        description: Create a team in an organization
        is: [withRequestItem: {item : TeamPost},
             withResponseItem: {item : Team},
             withNotFoundError,
             withPreconditionFailedError]
    /projects:
      get:
        description: List projects in an organization
        is: [withResponseItems: {item : Project}]
    /shared_configs:
      get:
        description: List shared configurations in an organization
        is: [withResponseItems: {item : SharedConfig}]
      post:
        description: Create shared configuration in an organization
        is: [withRequestItem: {item : SharedConfigPost},
            withResponseItem: {item : SharedConfig},
            withNotFoundError,
            withPreconditionFailedError]

/teams:
  /{id}:
    get:
      description: Get a team
      is: [withResponseItem: {item : Team}, withNotFoundError]
    delete:
      description: Delete a team
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a team
      is: [withRequestItem: {item : TeamPatch}, withResponseItem: {item : Team}, withNotFoundError]

  /{team_id}:
    /shared_configs:
      get:
        description: List shared configurations in a team
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          description: Add a shared configuration to a team
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Remove shared configuration from a team
          is: [withNoBodyResponse, withNotFoundError]

/projects:
  /{project_id}:
    /shared_configs:
      get:
        description: List shared configurations attached to a project
        is: [withResponseItems: {item : SharedConfig}, withNotFoundError]

      /{shared_config_id}:
        post:
          description: Attach a shared configuration to a project
          is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
        delete:
          description: Dettach a shared configuration from a project
          is: [withNoBodyResponse, withNotFoundError]

    /env_vars:
      get:
        description: List environment variables connected to a project
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      /{env_var_id}:
        post:
          description: Connect a shared environment variable to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Dissconnect a shared environment variable from a project
          is: [withNoBodyResponse, withNotFoundError]

    /config_files:
      get:
        description: List config files connected to a project
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      /{config_file_id}:
        post:
          description: Connect a shared config file to a project
          is: [withNoBodyResponse, withNotFoundError]
        delete:
          description: Dissconnect a shared config file from a project
          is: [withNoBodyResponse, withNotFoundError]

/shared_configs:
  /{id}:
    get:
      description: Get a shared configuration
      is: [withResponseItem: {item : SharedConfig}, withNotFoundError]
    delete:
      description: Delete a shared configuration
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a shared configuration
      is: [withRequestItem: {item : SharedConfigPatch},
          withResponseItem: {item : SharedConfig}, withNotFoundError]

  /{shared_config_id}:
    /env_vars:
      get:
        description: List environment variables belonging to a shared configuration
        is: [withResponseItems: {item : EnvVar}, withNotFoundError]
      post:
        description: Create environment variable within a shared configuration
        is: [withRequestItem: {item : EnvVarPost},
            withResponseItem: {item : EnvVar}, withNotFoundError]
    /config_files:
      get:
        description: List config files belonging to a shared configuration
        is: [withResponseItems: {item : ConfigFile}, withNotFoundError]
      post:
        description: Create a config file within a shared configuration
        is: [withRequestItem: {item : ConfigFilePost},
            withResponseItem: {item : ConfigFile}, withNotFoundError]

/env_vars:
  /{id}:
    get:
      description: Get an environment variable
      is: [withResponseItem: {item : EnvVar}, withNotFoundError]
    delete:
      description: Delete an environment variable
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update an environment variable
      is: [withRequestItem: {item : EnvVarPatch},
          withResponseItem: {item : EnvVar}, withNotFoundError]

/config_files:
  /{id}:
    get:
      description: Get a config file
      is: [withResponseItem: {item : ConfigFile}, withNotFoundError]
    delete:
      description: Delete a config file
      is: [withNoBodyResponse, withNotFoundError]
    patch:
      description: Update a config file
      is: [withRequestItem: {item : ConfigFilePatch},
          withResponseItem: {item : ConfigFile}, withNotFoundError]
